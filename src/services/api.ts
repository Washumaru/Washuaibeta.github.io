import { Groq } from 'groq-sdk';
import type { PhysicsProblem } from '../types';
import Tesseract from 'tesseract.js';

const groq = new Groq({
  apiKey: "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",
  dangerouslyAllowBrowser: true
});

export async function solveProblem({ topic, problem }: PhysicsProblem): Promise<string> {
  const prompt = `Eres un profesor experto de f√≠sica resolviendo paso a paso un problema. DEBES OBLIGATORIAMENTE seguir esta estructura COMPLETA para CADA problema, sin excepci√≥n:

1Ô∏è‚É£ DATOS DEL PROBLEMA
   ‚Ä¢ Datos proporcionados (OBLIGATORIO listar todos):
     - [Cada valor num√©rico con sus unidades]
     - [Cada condici√≥n o informaci√≥n relevante]
   ‚Ä¢ Inc√≥gnita(s) (OBLIGATORIO especificar):
     - Variable(s) que debemos encontrar
     - Unidades esperadas
   ‚Ä¢ Conversiones necesarias (si aplica):
     - Convertir cada valor a unidades del SI
     - Mostrar cada conversi√≥n paso a paso

2Ô∏è‚É£ F√ìRMULAS Y PRINCIPIOS F√çSICOS
   ‚Ä¢ OBLIGATORIO listar TODAS las f√≥rmulas necesarias:
     1. F√≥rmula principal: [ecuaci√≥n]
        - Significado de cada variable
        - Por qu√© elegimos esta f√≥rmula
     2. F√≥rmulas secundarias: [ecuaciones]
        - Para qu√© sirve cada una
        - C√≥mo se relacionan entre s√≠

3Ô∏è‚É£ RESOLUCI√ìN PASO A PASO
   [‚ö†Ô∏è OBLIGATORIO mostrar TODOS los pasos hasta llegar al resultado final]

   PASO 1: [Nombre descriptivo]
   ‚Ä¢ Objetivo de este paso
   ‚Ä¢ F√≥rmula a utilizar
   ‚Ä¢ Sustituci√≥n de valores:
     - Escribir la ecuaci√≥n
     - Reemplazar cada variable con su valor
   ‚Ä¢ Operaciones detalladas:
     1. Primera operaci√≥n: [mostrar c√°lculo completo]
     2. Segunda operaci√≥n: [mostrar c√°lculo completo]
     [etc.]
   ‚Ä¢ Resultado de este paso: [valor con unidades]
   üìù Nota: [explicar el significado de este resultado]

   PASO 2: [Nombre descriptivo]
   [Repetir el mismo formato detallado]
   
   PASO 3: [Nombre descriptivo]
   [Repetir el mismo formato detallado]
   
   [CONTINUAR con todos los pasos necesarios hasta llegar al resultado final]

4Ô∏è‚É£ VERIFICACI√ìN Y COMPROBACI√ìN
   ‚Ä¢ Sustituir el resultado en la ecuaci√≥n original
   ‚Ä¢ Comprobar que las unidades coinciden
   ‚Ä¢ Verificar que el resultado tiene sentido f√≠sico

üí° RESPUESTA FINAL COMPROBADA üí°
--------------------------------
‚Ä¢ Resultado num√©rico: [valor con unidades]
‚Ä¢ Verificaci√≥n: [demostrar que el resultado es correcto]
‚Ä¢ Interpretaci√≥n f√≠sica: [explicar qu√© significa este resultado]
‚Ä¢ Comprobaci√≥n de unidades: [confirmar que las unidades son correctas]
--------------------------------

REGLAS ESTRICTAS Y OBLIGATORIAS:
1. ‚ö†Ô∏è DEBES completar TODAS las secciones anteriores
2. ‚ö†Ô∏è DEBES mostrar TODOS los pasos matem√°ticos
3. ‚ö†Ô∏è DEBES incluir al menos 3 pasos en la resoluci√≥n
4. ‚ö†Ô∏è NO PUEDES saltar ning√∫n paso matem√°tico
5. ‚ö†Ô∏è DEBES explicar cada paso como si fuera para un principiante
6. ‚ö†Ô∏è DEBES incluir unidades en cada operaci√≥n
7. ‚ö†Ô∏è DEBES verificar el resultado final
8. ‚ö†Ô∏è DEBES mostrar la comprobaci√≥n matem√°tica
9. ‚ö†Ô∏è NO PUEDES dejar el problema sin resolver completamente
10. ‚ö†Ô∏è DEBES destacar la respuesta final en su secci√≥n especial

Problema de ${topic} a resolver: ${problem}

RECORDATORIO FINAL:
- Es OBLIGATORIO mostrar el desarrollo completo
- Es OBLIGATORIO incluir todos los pasos matem√°ticos
- Es OBLIGATORIO llegar a una respuesta num√©rica final
- Es OBLIGATORIO verificar y comprobar el resultado`;

  try {
    const completion = await groq.chat.completions.create({
      messages: [{ role: "user", content: prompt }],
      model: "mixtral-8x7b-32768",
      temperature: 0.1,
      max_tokens: 4096,
      top_p: 0.9,
      stream: false,
    });

    return completion.choices[0]?.message?.content || "No se pudo generar una soluci√≥n.";
  } catch (error) {
    console.error('Error al resolver el problema:', error);
    throw new Error('Error al conectar con el servicio de IA. Por favor, intenta de nuevo m√°s tarde.');
  }
}

export async function askQuestion({ topic, problem, question }: { topic: string; problem: string; question: string }): Promise<string> {
  const prompt = `Como profesor experto de f√≠sica, responder√© tu pregunta sobre el siguiente problema:

Problema de ${topic}:
${problem}

Tu pregunta es: ${question}

Responder√© de manera clara y detallada, asegur√°ndome de:
1. Explicar los conceptos relevantes
2. Usar analog√≠as cuando sea √∫til
3. Mostrar c√°lculos si son necesarios
4. Relacionar la respuesta con el problema original
5. Asegurarme que la explicaci√≥n sea comprensible

IMPORTANTE: La respuesta debe ser espec√≠fica para esta pregunta y este problema en particular.`;

  try {
    const completion = await groq.chat.completions.create({
      messages: [{ role: "user", content: prompt }],
      model: "mixtral-8x7b-32768",
      temperature: 0.3,
      max_tokens: 2048,
    });

    return completion.choices[0]?.message?.content || "No se pudo generar una respuesta.";
  } catch (error) {
    console.error('Error al responder la pregunta:', error);
    throw new Error('Error al procesar tu pregunta. Por favor, intenta de nuevo.');
  }
}

export async function extractTextFromImage(file: File): Promise<string> {
  try {
    const { data: { text } } = await Tesseract.recognize(
      file,
      'spa+eng',
      { logger: () => {} }
    );
    return text;
  } catch (error) {
    console.error('Error en OCR:', error);
    throw new Error('Error al procesar la imagen');
  }
}